buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'com.github.johnrengelman.shadow'

group 'com.faforever'


sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    implementation("org.projectlombok:lombok:$lombokVersion")
    testAnnotationProcessor("org.projectlombok:lombok:$lombokVersion")
    testImplementation("org.projectlombok:lombok:$lombokVersion")

    annotationProcessor("info.picocli:picocli-codegen:$picocliVersion")
    implementation("info.picocli:picocli:$picocliVersion")

//    implementation "org.jitsi:ice4j:1.0"
//    implementation 'com.github.jitsi:ice4j:59693a4894'
    implementation("com.github.Geosearchef:ice4j:52c8e4bcef")
    implementation("com.github.faforever:JJsonRpc:37669e0fed")
    implementation("com.google.code.gson:gson:$gsonVersion")
    implementation("com.google.guava:guava:$guavaVersion")
    implementation("org.slf4j:slf4j-api:1.7.36")
//    implementation "org.slf4j:slf4j-simple:1.7.25"
    implementation("ch.qos.logback:logback-classic:$logbackVersion")
    implementation("ch.qos.logback:logback-core:$logbackVersion")
    implementation("org.java-websocket:Java-WebSocket:1.5.3")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.13.4")

    if(javafxClasspath == "compileOnly") {
        compileOnly("org.openjfx:javafx-base:${javafxVersion}:${javafxPlatform}")
        compileOnly("org.openjfx:javafx-controls:${javafxVersion}:${javafxPlatform}")
        compileOnly("org.openjfx:javafx-graphics:${javafxVersion}:${javafxPlatform}")
        compileOnly("org.openjfx:javafx-fxml:${javafxVersion}:${javafxPlatform}")
        compileOnly("org.openjfx:javafx-web:${javafxVersion}:${javafxPlatform}")
        compileOnly("org.openjfx:javafx-media:${javafxVersion}:${javafxPlatform}")
    } else {
        implementation("org.openjfx:javafx-base:${javafxVersion}:${javafxPlatform}")
        implementation("org.openjfx:javafx-controls:${javafxVersion}:${javafxPlatform}")
        implementation("org.openjfx:javafx-graphics:${javafxVersion}:${javafxPlatform}")
        implementation("org.openjfx:javafx-fxml:${javafxVersion}:${javafxPlatform}")
        implementation("org.openjfx:javafx-web:${javafxVersion}:${javafxPlatform}")
        implementation("org.openjfx:javafx-media:${javafxVersion}:${javafxPlatform}")
    }
}

shadowJar {
    def plattformSuffix = javafxPlatform
    if(javafxClasspath == "compileOnly") {
        plattformSuffix = "nojfx"
    }

    getArchiveFileName().set("faf-ice-adapter-${version}-${plattformSuffix}.jar")
    manifest {
        attributes 'Main-Class': 'com.faforever.iceadapter.IceAdapter'
    }
}
